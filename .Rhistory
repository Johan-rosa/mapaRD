municipios = mun_spdf@data)
tabla_toponimia
tabla_toponimia[[2]]
tabla_toponimia[[1]]
source('~/wd/R/paquetes/mapaRD/R/generar_mapas.R')
source('~/wd/R/paquetes/mapaRD/R/funs.R')
tabla_toponimia("provincial")
source('~/wd/R/paquetes/mapaRD/R/generar_mapas.R')
source('~/wd/R/paquetes/mapaRD/R/funs.R')
tabla_toponimia("provincial")
tabla_toponimia("municipal")
library(roxygen2)
roxygen2::roxygenise()
roxygenize()
roxygenize()
rm(list=ls())
roxygenize()
roxygenize()
library(mapaRD)
ggmapaRD(nivel="regional",d,"x", idName = "ID2")
d <- data.frame(ID=1:155,x=runif(155))
ggmapaRD(nivel="municipal",d,"x", idName="ID2")
library(mapaRD)d
d
mapaRD(nivel="municipal",d,"x", idName="ID2")
# nivel provincial
d <- read.csv("https://gcaff.github.io/covid-rd/data/covid_data_rd.csv")
d <- d%>%
filter(provincia != "No especificado")
d$prov_id <- rep(1:32,102)
dd <- d %>%
filter(fecha == "16/4/20") %>%
mutate(ID = prov_id)
mapaRD(nivel="provincial",dd,"casos_acum", idName = "ID2")
source('~/wd/R/paquetes/mapaRD/R/prueba.R')
ggmapaRD(d,"x",nivel="municipal", idName="ID2")
source('~/wd/R/paquetes/mapaRD/R/funs.R')
tabla_toponimia()
tabla_toponimia("municipio")
tabla_toponimia("municipal")
d <- data.frame(ID=1:15,x=runif(15))
d <- data.frame(ID=1:15,x=runif(15))
ggmapaRD(d,"x",nivel="municipal", idName = "ID2")
rd_spdf
rd_spdf %>%
ggplot2::ggplot(ggplot2::aes(x=long, y=lat,group=group)) +
ggplot2::geom_polygon(ggplot2::aes(fill= !!varname)) +
ggplot2::coord_map() +
ggplot2::theme_void()
d <- data.frame(ID=1:155,x=runif(155))
ggmapaRD(d,"x",nivel="municipal", idName="ID2")
source('~/wd/R/paquetes/mapaRD/R/funs.R')
d <- data.frame(ID=1:15,x=runif(15))
ggmapaRD(d,"x",nivel="municipal", idName = "ID2")
source('~/wd/R/paquetes/mapaRD/R/funs.R')
d <- data.frame(ID=1:15,x=runif(15))
ggmapaRD(d,"x",nivel="municipal", idName = "ID2")
source('~/wd/R/paquetes/mapaRD/R/funs.R')
d <- data.frame(ID=1:15,x=runif(15))
mapaRD(d,"x",nivel="municipal", idName="ID2")
ggmapaRD(d,"x",nivel="municipal", idName = "ID2")
source('~/wd/R/paquetes/mapaRD/R/funs.R')
d <- data.frame(ID=1:15,x=runif(15))
mapaRD(d,"x",nivel="municipal", idName="ID2")
source('~/wd/R/paquetes/mapaRD/R/funs.R')
d <- data.frame(ID=1:15,x=runif(15))
mapaRD(d,"x",nivel="municipal", idName="ID2")
rd_spdf
rd_spdf@data
rd_spdf@data
source('~/wd/R/paquetes/mapaRD/R/funs.R')
d <- data.frame(ID=1:15,x=runif(15))
mapaRD(d,"x",nivel="municipal", idName="ID2")
rd_spdf[!is.na(rd_spdf@data[[!!varname]])]
source('~/wd/R/paquetes/mapaRD/R/funs.R')
d <- data.frame(ID=1:15,x=runif(15))
mapaRD(d,"x",nivel="municipal", idName="ID2")
rd_spdf[!is.na(rd_spdf@data[var])]
var
rd_spdf@data
rd_spdf[!is.na(rd_spdf@data[var])]
rd_spdf[!is.na(rd_spdf@data[var]),]
rd_spdf[!is.na(rd_spdf@data["x"])]
rd_spdf@data["x"]
is.na(rd_spdf@data["x"])
subset(rd_spdf, is.na(!!varname))
rd_rspdf <- rspdf %>%
subset(!is.na(!!varname))
rd_spdf <- rd_spdf %>%
subset(!is.na(!!varname))
rd_spdf %>%
subset(!is.na(eval(varname))
)
rd_spdf <- rd_spdf %>%
subset(!is.na(eval(varname)))
cartography::choroLayer(spdf = rd_spdf, var = var)
d <- data.frame(ID=1:15,x=runif(15))
mapaRD(d,"x",nivel="municipal", idName="ID2")
source('~/wd/R/paquetes/mapaRD/R/funs.R')
d <- data.frame(ID=1:15,x=runif(15))
mapaRD(d,"x",nivel="municipal", idName="ID2")
ggmapaRD(d,"x",nivel="municipal", idName = "ID2")
tabla_toponimia()
tabla_toponimia("municipal")
tabla_toponimia("municipal") %>%
filter(PROV %in% c("01","32"))
tabla_toponimia("municipal") %>%
filter(PROV %in% c("01","32")) %>% # DN y SD
pull(ID)
IDs_SD <- tabla_toponimia("municipal") %>%
filter(PROV %in% c("01","32")) %>% # DN y SD
pull(ID2)
IDs_SD
d <- data.frame(ID=IDs_SD,x=runif(length(IDs_SD)))
mapaRD(d,"x",nivel="municipal", idName="ID2")
d <- data.frame(ID=IDs_SD,x=runif(length(IDs_SD)))
mapaRD(d,"x",nivel="municipal", idName="ID2")
ggmapaRD(d,"x",nivel="municipal", idName = "ID2")
?gSimplify
tabla_toponimia("municipal")
tabla_toponimia("provincial")
IDs_SANTIAGO <- tabla_toponimia("municipal") %>%
filter(PROV == "25") %>% # Santiago
pull(ID2)
d <- data.frame(ID=IDs_SANTIAGO,x=runif(length(IDs_SANTIAGO)))
mapaRD(d,"x",nivel="municipal", idName="ID2", na.rm=T)
ggmapaRD(d,"x",nivel="municipal", idName = "ID2", na.rm=T)
p1 <- ggmapaRD(d,"x",nivel="municipal", idName = "ID2", na.rm=T)
install.packages("plotly")
plotly::ggplotly(p1)
d <- read.csv("https://gcaff.github.io/covid-rd/data/covid_data_rd.csv")
d <- d%>%
filter(provincia != "No especificado")
d$prov_id <- rep(1:32,102)
dd <- d %>%
filter(fecha == "16/4/20") %>%
mutate(ID = prov_id)
dd
mapaRD(dd,"casos_acum",nivel="provincial", idName = "ID2")
ggmapaRD(dd,"casos_acum",nivel="provincial", idName = "ID2")
d <- data.frame(ID=1:10,x=runif(10))
mapaRD(d,"x",nivel="regional", idName = "ID2")
ggmapaRD(d,"x",nivel="regional", idName = "ID2")
d <- data.frame(ID=1:155,x=runif(155))
mapaRD(d,"x",nivel="municipal", idName="ID2")
ggmapaRD(d,"x",nivel="municipal", idName="ID2")
tabla_toponimia("municipal")
tabla_toponimia("provincial")
IDs_SD <- tabla_toponimia("municipal") %>%
filter(PROV %in% c("01","32")) %>% # DN y SD
pull(ID2)
IDs_SD
d <- data.frame(ID=IDs_SD,x=runif(length(IDs_SD)))
mapaRD(d,"x",nivel="municipal", idName="ID2", na.rm=T)
ggmapaRD(d,"x",nivel="municipal", idName = "ID2", na.rm=T)
IDs_SANTIAGO <- tabla_toponimia("municipal") %>%
filter(PROV == "25") %>% # Santiago
pull(ID2)
d <- data.frame(ID=IDs_SANTIAGO,x=runif(length(IDs_SANTIAGO)))
mapaRD(d,"x",nivel="municipal", idName="ID2", na.rm=T)
p1 <- ggmapaRD(d,"x",nivel="municipal", idName = "ID2", na.rm=T)
plotly::ggplotly(p1)
?sd
?mapaRD
source('~/wd/R/paquetes/mapaRD/R/funs.R')
mapaRD_interactivo(dd,"casos_acum",nivel="provincial", idName = "ID2")
ggmapaRD(dd,"casos_acum",nivel="provincial", idName = "ID2")
ggmapaRD(dd,"casos_acum",nivel="provincial", na.rm=T, idName = "ID2")
mapaRD_interactivo(dd,"casos_acum",nivel="provincial", na.rm=T, idName = "ID2")
mapaRD_interactivo(dd,"casos_acum",nivel="provincial", idName = "ID2")
source('~/wd/R/paquetes/mapaRD/R/funs.R')
mapaRD_interactivo(dd,"casos_acum",nivel="provincial", idName = "ID2")
na.rm
source('~/wd/R/paquetes/mapaRD/R/funs.R')
mapaRD_interactivo(dd,"casos_acum",nivel="provincial", idName = "ID2")
source('~/wd/R/paquetes/mapaRD/R/funs.R')
mapaRD_interactivo(dd,"casos_acum",nivel="provincial", idName = "ID2")
source('~/wd/R/paquetes/mapaRD/R/generar_mapas.R')
library(rgdal)
library(rgeos)
library(dplyr)
library(cartography)
##### República Dominicana
########### Region ###########
# importar SPDF
rd_spdf_raw <- readOGR(
dsn= paste0("~/Documents/PascalAnalytics/proyectos/MapaPoliticoRD/mapa RD/ShapeFilesCenso2010") ,
layer="REGCenso2010",
verbose=FALSE
)
rd_spdf2 <- rd_spdf_raw
rd_spdf1 <- gSimplify(rd_spdf_raw, 100, topologyPreserve = TRUE) # reducir tamanio del SPDF
rd_spdf1 <- gSimplify(rd_spdf_raw, 10, topologyPreserve = TRUE)
rd_spdf2@polygons <- rd_spdf1@polygons
library(rgdal)
library(rgeos)
library(dplyr)
library(cartography)
##### República Dominicana
########### Region ###########
# importar SPDF
rd_spdf_raw <- readOGR(
dsn= paste0("~/Documents/PascalAnalytics/proyectos/MapaPoliticoRD/mapa RD/ShapeFilesCenso2010") ,
layer="REGCenso2010",
verbose=FALSE
)
rd_spdf2 <- rd_spdf_raw
rd_spdf1 <- gSimplify(rd_spdf_raw, 100, topologyPreserve = TRUE) # reducir tamanio del SPDF
rd_spdf1 <- gSimplify(rd_spdf_raw, 1000, topologyPreserve = TRUE)
# introducir poligonos reducidos al SPDF original (que contiene la data)
rd_spdf2@polygons <- rd_spdf1@polygons
rd_spdf2
memory.size()
object.size(rd_spdf2)
object.size(rd_spdf_raw)
library(rgdal)
library(rgeos)
library(dplyr)
library(cartography)
##### República Dominicana
########### Region ###########
# importar SPDF
rd_spdf_raw <- readOGR(
dsn= paste0("~/Documents/PascalAnalytics/proyectos/MapaPoliticoRD/mapa RD/ShapeFilesCenso2010") ,
layer="REGCenso2010",
verbose=FALSE
)
rd_spdf2 <- rd_spdf_raw
rd_spdf1 <- gSimplify(rd_spdf_raw, 100, topologyPreserve = TRUE) # reducir tamanio del SPDF
rd_spdf1 <- gSimplify(rd_spdf_raw, 10, topologyPreserve = TRUE)
object.size(rd_spdf2)
object.size(rd_spdf_raw)
library(rgdal)
library(rgeos)
library(dplyr)
library(cartography)
##### República Dominicana
########### Region ###########
# importar SPDF
rd_spdf_raw <- readOGR(
dsn= paste0("~/Documents/PascalAnalytics/proyectos/MapaPoliticoRD/mapa RD/ShapeFilesCenso2010") ,
layer="REGCenso2010",
verbose=FALSE
)
rd_spdf2 <- rd_spdf_raw
rd_spdf1 <- gSimplify(rd_spdf_raw, 100, topologyPreserve = TRUE) # reducir tamanio del SPDF
rd_spdf1 <- gSimplify(rd_spdf_raw, 20, topologyPreserve = TRUE)
rd_spdf2@polygons <- rd_spdf1@polygons
rd_spdf1 <- gSimplify(rd_spdf_raw, 100, topologyPreserve = TRUE) # reducir tamanio del SPDF
# introducir poligonos reducidos al SPDF original (que contiene la data)
rd_spdf2@polygons <- rd_spdf1@polygons
object.size(rd_spdf2)
rd_spdf1 <- gSimplify(rd_spdf_raw, 20, topologyPreserve = TRUE)
# introducir poligonos reducidos al SPDF original (que contiene la data)
rd_spdf2@polygons <- rd_spdf1@polygons
object.size(rd_spdf2)
library(rgdal)
library(rgeos)
library(dplyr)
library(cartography)
##### República Dominicana
########### Region ###########
# importar SPDF
rd_spdf_raw <- readOGR(
dsn= paste0("~/Documents/PascalAnalytics/proyectos/MapaPoliticoRD/mapa RD/ShapeFilesCenso2010") ,
layer="REGCenso2010",
verbose=FALSE
)
rd_spdf2 <- rd_spdf_raw
rd_spdf1 <- gSimplify(rd_spdf_raw, 100, topologyPreserve = TRUE) # reducir tamanio del SPDF
rd_spdf1 <- gSimplify(rd_spdf_raw, 5, topologyPreserve = TRUE)
# introducir poligonos reducidos al SPDF original (que contiene la data)
rd_spdf2@polygons <- rd_spdf1@polygons
object.size(rd_spdf2)
source('~/wd/R/paquetes/mapaRD/R/generar_mapas.R')
mapaRD_interactivo(dd,"casos_acum",nivel="provincial", idName = "ID2")
ggmapaRD(dd,"casos_acum",nivel="provincial", idName = "ID2")
mapaRD_interactivo(dd,"casos_acum",nivel="provincial", idName = "ID2")
p1
p1 + geom_polygon(color="black")
p1 + geom_polygon(color="black", alpha=1)
p1 + geom_polygon(color="black", alpha=0)
p1 + geom_polygon(color="black", alpha=0) %>% ggplotly()
p1 + geom_polygon(color="black", alpha=0) %>% plotly::ggplotly()
source('~/wd/R/paquetes/mapaRD/R/funs.R')
ggmapaRD(d,"x",nivel="municipal", idName = "ID2", na.rm=T)
mapaRD_interactivo(dd,"casos_acum",nivel="provincial", idName = "ID2")
ggmapaRD(dd,"casos_acum",nivel="provincial", idName = "ID2")
mapaRD(dd,"casos_acum",nivel="provincial", idName = "ID2")
source('~/wd/R/paquetes/mapaRD/R/generar_mapas.R')
ggmapaRD(dd,"casos_acum",nivel="provincial", idName = "ID2")
source('~/wd/R/paquetes/mapaRD/R/funs.R')
ggmapaRD(dd,"casos_acum",nivel="provincial", idName = "ID2")
?plotly::add_trace
source('~/wd/R/paquetes/mapaRD/R/funs.R')
roxygenise()
roxygenise()
roxygenise()
library(mapaRD)
mapaRD_interactivo(dd,"casos_acum",nivel="provincial", idName = "ID2") %>%
plotly::ggplotly(p1)
mapaRD:::mapaRD_interactivo(dd,"casos_acum",nivel="provincial", idName = "ID2") %>%
plotly::ggplotly(p1)
d <- read.csv("https://gcaff.github.io/covid-rd/data/covid_data_rd.csv")
d <- d%>%
filter(provincia != "No especificado")
d$prov_id <- rep(1:32,102)
dd <- d %>%
filter(fecha == "16/4/20") %>%
mutate(ID = prov_id)
mapaRD:::mapaRD_interactivo(dd,"casos_acum",nivel="provincial", idName = "ID2") %>%
plotly::ggplotly(p1)
mapaRD:::mapaRD_interactivo(dd,"casos_acum",nivel="provincial", idName = "ID2")
mapaRD::mun_spdf
mapaRD::mun_spdf_fort
library(mapaRD)
# nivel provincial
d <- read.csv("https://gcaff.github.io/covid-rd/data/covid_data_rd.csv")
d <- d%>%
filter(provincia != "No especificado")
d$prov_id <- rep(1:32,102)
dd <- d %>%
filter(fecha == "16/4/20") %>%
mutate(ID = prov_id)
mapaRD(dd,"casos_acum",nivel="provincial", idName = "ID2")
ggmapaRD(dd,"casos_acum",nivel="provincial", idName = "ID2")
roxygenise()
roxygenise()
roxygenise()
"klk" %in% c("asd","asd","klk")
source('~/wd/R/paquetes/mapaRD/R/funs.R')
use_travis()
use_travis()
library(mapaRD)
roxygenise()
d <- data.frame(ID=1:10,x=runif(10))
mapaRD(d,"x",nivel="regional", idName = "ID2")
library(mapaRD)
order(c(T,T,F))
or(c(T,T,F))
all(c(T,T,F))
?all
any(c(T,T,F))
roxygenise()
library(mapaRD)
source('~/wd/R/paquetes/mapaRD/R/funs.R')
roxygenise()
roxygenise()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
roxygenise()
library(mapaRD)
d <- data.frame(ID=1:155,x=runif(155))
ggmapaRD(d,"x",nivel="municipal", idName="ID2")
tabla_toponimia()
tabla_toponimia("provincial")
tabla_toponimia("regional")
d <- data.frame(ID=1:10,x=runif(10))
ggmapaRD(d,"x",nivel="regional", idName = "ID2")
ggmapaRD(d,"x",nivel="regional", idName = "ID2") +
ggtitle("Población por región, 2010")
vignette("mapaRD")
vignette("mapaRD")
vignette("mapRD")
build_vignettes()
build_vignettes()
build_vignettes()
build_vignettes()
devtools::install_github("gcaff/mapaRD")
library(ggplot2)
library(dplyr)
library(mapaRD)
d <- read.csv("http://gcaff.github.io/data/RD/pob_region_rd.csv")
head(d)
library(ggplot2)
library(dplyr)
library(mapaRD)
ggmapaRD(d,"x",nivel="regional", idName = "ID2") +
ggtitle("Población por región, 2010") +
scale_fill_brewer(palette="Dark2")
d <- data.frame(ID=1:10,x=runif(10))
ggmapaRD(d,"x",nivel="regional", idName = "ID2") +
ggtitle("Población por región, 2010") +
scale_fill_brewer(palette="Dark2")
ggmapaRD(d,"x",nivel="regional", idName = "ID2") +
ggtitle("Población por región, 2010") +
scale_fill_color(palette="Dark2")
ggmapaRD(d,"x",nivel="regional", idName = "ID2") +
ggtitle("Población por región, 2010") +
scale_color_brewer(palette="Dark2")
p1 <- ggmapaRD(d,"x",nivel="regional", idName = "ID2") +
ggtitle("Población por región, 2010")
p1 +
scale_color_brewer(palette="YlOrRd")
p1 + scale_fill_gradient(low = "pink", high = "green")
?scale_fill_gradient
p1 +
scale_fill_gradient(low = "yellow", high = "red")
?scale_fill_gradient
p1 +
scale_fill_gradient(low = "blue", high = "red")
p1 +
scale_fill_gradient(low = "yellow", high = "red") +
scale_color_gradient(low="black", high="black")
source('~/wd/R/paquetes/mapaRD/R/funs.R')
p1 <- ggmapaRD(d,"x",nivel="regional", idName = "ID2") +
ggtitle("Población por región, 2010")
p1
source('~/wd/R/paquetes/mapaRD/R/funs.R')
p1 <- ggmapaRD(d,"x",nivel="regional", idName = "ID2") +
ggtitle("Población por región, 2010")
p1
source('~/wd/R/paquetes/mapaRD/R/funs.R')
ggmapaRD(d,"x",nivel="regional", idName = "ID2") +
ggtitle("Población por región, 2010")
source('~/wd/R/paquetes/mapaRD/R/funs.R')
ggmapaRD(d,"x",nivel="regional", idName = "ID2") +
ggtitle("Población por región, 2010")
source('~/wd/R/paquetes/mapaRD/R/funs.R')
p1 <- ggmapaRD(d,"x",nivel="regional", idName = "ID2") +
ggtitle("Población por región, 2010")
p1 +
scale_fill_gradient(low = "black", high = "red")
.libPaths()
data()
data("mapaRD")
roxygenise()
roxygenise()
roxygenise()
source('~/wd/R/paquetes/mapaRD/R/funs.R')
tabla_toponimia()
tabla_toponimia()
dirPath
roxygenise()
source('~/wd/R/paquetes/mapaRD/R/funs.R')
tabla_toponimia()
source('~/wd/R/paquetes/mapaRD/R/funs.R')
tabla_toponimia()
dirPath
tabla_toponimia()
source('~/wd/R/paquetes/mapaRD/R/generar_mapas.R')
source('~/wd/R/paquetes/mapaRD/R/generar_mapas.R')
source('~/wd/R/paquetes/mapaRD/R/funs.R')
tabla_toponimia()
roxygenise()
roxygenise()
roxygenise()
source('~/wd/R/paquetes/mapaRD/R/generar_mapas.R')
source('~/wd/R/paquetes/mapaRD/R/generar_mapas.R')
use_data()
use_data(tabla_topon, reg_spdf)
use_data(tabla_topon, reg_spdf, reg_spdf_fort,
prov_spdf, prov_spdf_fort,
mun_spdf,mun_spdf_fort, internal = TRUE)
roxygenise()
roxygenise()
roxygenise(overwrite = TRUE)
source('~/wd/R/paquetes/mapaRD/R/generar_mapas.R')
roxygenise()
?use_data
source('~/wd/R/paquetes/mapaRD/R/generar_mapas.R')
tabla_toponimia("regional")
tabla_toponimia("regional")
source('~/wd/R/paquetes/mapaRD/R/funs.R')
d <- data.frame(ID=1:10,x=runif(10))
ggmapaRD(d,"x",nivel="regional", idName = "ID2") +
ggplot2::ggtitle("Población por región, 2010")
source('~/wd/R/paquetes/mapaRD/R/funs.R')
ggmapaRD(d,"x",nivel="regional", idName = "ID2") +
ggplot2::ggtitle("Población por región, 2010")
key
idName
df
rd_spdf %>%
dplyr::left_join(df, by=c(idName=key))
rd_spdf %>%
dplyr::left_join(df, by=c(sym(idName)=sym(key)))
rd_spdf %>%
dplyr::left_join(df, by=c(!!sym(idName)=!!sym(key)))
key
joiner <- key
names(key)
names(key) <- idName
names(key)
names(key) <- idName
rd_spdf %>%
dplyr::left_join(df, by=key)
key
source('~/wd/R/paquetes/mapaRD/R/funs.R')
ggmapaRD(d,"x",nivel="regional", idName = "ID2") +
ggplot2::ggtitle("Población por región, 2010")
ggmapaRD(d,"y",nivel="regional", idName = "ID2") +
ggplot2::ggtitle("Población por región, 2010")
source('~/wd/R/paquetes/mapaRD/R/funs.R')
ggmapaRD(d,"y",nivel="regio1nal", idName = "ID2") +
ggplot2::ggtitle("Población por región, 2010")
ggmapaRD(d,"x",nivel="regio1nal", idName = "ID2") +
ggplot2::ggtitle("Población por región, 2010")
ggmapaRD(d,"x",nivel="regio1nal", idName = "ID2", key="asd") +
ggplot2::ggtitle("Población por región, 2010")
ggmapaRD("x","x",nivel="regio1nal", idName = "ID2", key="asd") +
ggplot2::ggtitle("Población por región, 2010")
tabla_toponimia()
tabla_toponimia("regional")
tabla_toponimia("municipal")
